# -*- coding: utf-8 -*-
"""Copy of Assignment - Introduction to Lists.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_NamODetcsaVd1n7CLfdY8UsmtkBJNEY

## <u>While doing this assignment only use those concepts which have been taught till now</u>

## <u>Problem 1</u>

A list contains the average daily temperature(in degree Celsius) of a city over a particular week. Write a Python code to swap the highest and the lowest temperatures
"""

# A list containing average daily temperature over a week
temperatures = [34, 40, 29, 33, 42, 37, 39 ]
mint=min(temperatures)
maxt=max(temperatures)
temperatures[temperatures.index(mint)]=maxt
temperatures[temperatures.index(maxt,(temperatures.index(maxt)+1))]=mint
print(temperatures)
# The expected output
# output_temperatures = [34, 40, 42, 33, 29, 37, 39]

"""
## <u>Problem 2 </u>

### Measures of Averages

* Mean of a group is defined as the sum of the elements in the group divided by the number of elements in the group.
* Median is the middle number in a <b>sorted</b>, ascending or descending, list of numbers. If the list has $N$ numbers where $N$ is odd, then median is the element in the middle i.e, $(\frac{N+1}{2})^{th}$ element. If $N$ is even, then median is the mean of $(\frac{N}{2})^{th}$ and $(\frac{N}{2}+1)^{th}$ elements"""

# List of product prices
prod_price_list = [400, 250, 800, 550, 600, 820, 720, 15000, 360,250]

# Calculate the mean of the product prices. Use list functions. Also print the mean_price
mean_price = sum(prod_price_list)/len(prod_price_list)
print(mean_price)

"""### Calculate the median price"""

# Step 1 - Obtain the sorted list. Print the sorted_prices
sorted_prices = sorted(prod_price_list)                       # .sort() method will change the original list but if we use sorted(list_name) then we can assign it to any variables
sorted_prices

# Check if the number of elements in the list is even or odd
n=len(sorted_prices)
median_price = (sorted_prices[int(n/2)-1]+sorted_prices[int(n/2)])/2

# Use the corresponding formula to calculate the median and print the median
median_price

# Check which is greater, mean or median
if(mean_price>median_price):
  print(str(mean_price)+" mean is greater")
else:
  print(str(median_parice)+" median is greater")

"""### Why do you think that is the case??

### <u>Write your explanation in this text cell</u>

Your explanation :  Mean is greatert than medin it means unbalanced data.

## <u> Problem 3 </u>

Having a nested list sometimes might be a bit problematic. An individual was asked to collect the names of companies in the technology sector. While creating the list, by mistake the last three companies were subsumed in a list as shown below. You are required to get rid of the nesting
"""

# The list of tech companies curated by the individual
tech_companies = ['Qualcomm','Google','Apple',['Nvidia','Cisco','Samsung']]

# The final list that we want
# correct_tech_companies = ['Qualcomm','Google','Apple','Nvidia','Cisco','Samsung']

# Write your code below
tech_companies_last=tech_companies[-1]
tech=tech_companies[:-1]+tech_companies_last
print(tech)

# Do the same task another way
tech_companies.remove(tech_companies[-1])
tech_companies.extend(tech_companies_last)
tech_companies

